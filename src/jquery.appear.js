// Generated by CoffeeScript 1.6.3
/*  AppearHandlar
*/


(function() {
  var AppearHandlar;

  AppearHandlar = (function() {
    AppearHandlar.prototype.timing = 0.5;

    function AppearHandlar() {
      this.$window = $(window);
      this.nodeList = [];
      this.flag = true;
      this.setEvent();
      this.windowSizeUpdate();
    }

    AppearHandlar.prototype.windowSizeUpdate = function() {
      return this.wh = this.$window.height() * this.timing;
    };

    AppearHandlar.prototype.setAnimation = function(node, before, after, opt) {
      var $node;
      $node = $(node);
      opt = opt || {
        duration: 500,
        easing: 'linear'
      };
      $node.css(before);
      $node.on({
        'scroll::appear': function(e) {
          $node.stop().animate(after, opt);
          return e.stopPropagation();
        },
        'scroll::disappear': function(e) {
          $node.stop().animate(before, opt);
          return e.stopPropagation();
        }
      });
      return this.nodeList.push({
        node: $node,
        offset: $node.offset(),
        isAppeared: false
      });
    };

    AppearHandlar.prototype.setFunction = function(node, before, after) {
      var $node;
      $node = $(node);
      if (typeof before === "function") {
        before($node);
      }
      $node.on({
        'scroll::appear': function(e) {
          if (typeof after === "function") {
            after($node);
          }
          return e.stopPropagation();
        },
        'scroll::disappear': function(e) {
          if (typeof before === "function") {
            before($node);
          }
          return e.stopPropagation();
        }
      });
      return this.nodeList.push({
        node: $node,
        offset: $node.offset(),
        isAppeared: false
      });
    };

    AppearHandlar.prototype.setEvent = function() {
      var _this = this;
      return this.$window.on({
        scroll: function() {
          if (_this.flag) {
            _this.flag = false;
            return setTimeout(function() {
              var item, st, _i, _len, _ref;
              st = _this.$window.scrollTop();
              if (_this.nodeList.length > 0) {
                _ref = _this.nodeList;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  item = _ref[_i];
                  if (st > item.offset.top - _this.wh) {
                    if (!item.isAppeared) {
                      item.isAppeared = true;
                      item.node.trigger('scroll::appear');
                    }
                  } else if (item.isAppeared) {
                    item.isAppeared = false;
                    item.node.trigger('scroll::disappear');
                  }
                }
              }
              return _this.flag = true;
            }, 200);
          }
        },
        resize: function() {
          return _this.windowSizeUpdate();
        }
      });
    };

    return AppearHandlar;

  })();

  $(function() {
    var totalDelay;
    window.AppearHandlar = new AppearHandlar();
    $.fn.extend({
      appearAnimate: function(before, after, opt) {
        return this.each(function() {
          return window.AppearHandlar.setAnimation(this, before, after, opt);
        });
      },
      appearFunction: function(before, after) {
        return this.each(function() {
          return window.AppearHandlar.setFunction(this, before, after);
        });
      }
    });
    $('.append-trigger').appearFunction(function($target) {
      $(".mod-float_menu").transit({
        left: -300
      });
      return $(".mod-float_banner").transit({
        right: -300
      });
    }, function($target) {
      $(".mod-float_menu").transit({
        left: 0
      });
      return $(".mod-float_banner").transit({
        right: -20
      });
    });
    totalDelay = 500;
    $('.append-sec-trigger').appearFunction(function($target) {
      $target.find('.anm-appear').stop().animate({
        scale: 0
      }, {
        duration: 400,
        easing: 'easeOutQuint'
      });
      $target.find('.anm-fadein').stop().animate({
        opacity: 0
      }, {
        duration: 400,
        easing: 'easeOutQuint'
      });
      return $target.find('.anm-line').css({
        background: "url(/images/bg-line.png) 0 50% no-repeat",
        backgroundSize: "0 20px"
      });
    }, function($target) {
      $target.find('.anm-appear').stop().animate({
        scale: 1
      }, {
        duration: 400,
        easing: 'easeOutQuint'
      });
      $target.find('.anm-fadein').stop().delay(totalDelay * 0.5).animate({
        opacity: 1
      }, {
        duration: 600,
        easing: 'easeOutQuint'
      });
      return $target.find('.anm-line').stop().delay(totalDelay).transit({
        backgroundSize: "100% 20px"
      });
    });
    $('.appear-top').appearAnimate({
      opacity: 0,
      top: -10,
      position: 'relative'
    }, {
      opacity: 1,
      top: 0
    }, {
      duration: 600,
      easing: 'easeOutQuint'
    });
    $('.appear-left').appearAnimate({
      opacity: 0,
      left: -10,
      position: 'relative'
    }, {
      opacity: 1,
      left: 0
    }, {
      duration: 1000,
      easing: 'easeOutQuint'
    });
    $('.appear-right').appearAnimate({
      opacity: 0,
      right: -10,
      position: 'relative'
    }, {
      opacity: 1,
      right: 0
    }, {
      duration: 1000,
      easing: 'easeOutQuint'
    });
    return $('.appear-bottom').appearAnimate({
      opacity: 0,
      bottom: -10,
      position: 'relative'
    }, {
      opacity: 1,
      bottom: 0
    }, {
      duration: 900,
      easing: 'easeInOutQuint'
    });
  });

}).call(this);
